name: Deploy to Production

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  deploy:
    if: github.event_name == 'push' || (github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Test database connection
        env:
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
        run: |
          echo "Testing direct database connection..."
          npx prisma db execute --url "$DIRECT_URL" --stdin <<< "SELECT 1" || echo "Direct connection failed"
          
      - name: Run database migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
        run: |
          echo "Running database migrations..."
          
          # Deploy migrations safely without data loss
          npx prisma migrate deploy
          
          echo "Database migrations complete."

      - name: Run database seed (only if needed)
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
        run: |
          echo "Checking if database seed is needed..."
          
          # Check if seed file exists
          if [ -f "prisma/seed.ts" ]; then
            echo "Seed file found."
            
            # Check if database is empty (no users)
            echo "Checking current user count..."
            USER_COUNT=$(npx prisma db execute --url "$DATABASE_URL" --stdin <<< "SELECT COUNT(*) FROM users;" 2>/dev/null | tail -1 | grep -oE '[0-9]+' || echo "0")
            echo "Current user count: $USER_COUNT"
            
            # Only run seed if database is empty
            if [ "$USER_COUNT" -eq "0" ]; then
              echo "Database is empty. Running seed..."
              npm run db:seed || {
                echo "Seed failed. Trying with tsx directly..."
                npx tsx prisma/seed.ts || echo "Seed execution failed"
              }
              
              # Verify seed results
              FINAL_USER_COUNT=$(npx prisma db execute --url "$DATABASE_URL" --stdin <<< "SELECT COUNT(*) FROM users;" 2>/dev/null | tail -1 | grep -oE '[0-9]+' || echo "0")
              echo "Final user count after seed: $FINAL_USER_COUNT"
            else
              echo "Database already has data. Skipping seed."
            fi
            
          else
            echo "No seed file found at prisma/seed.ts"
          fi
        continue-on-error: true

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

      - name: Notify Slack on Success
        if: success() && env.SLACK_WEBHOOK_URL != ''
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          MESSAGE="üöÄ „Éó„É≠„ÉÄ„ÇØ„Ç∑„Éß„É≥„Éá„Éó„É≠„Ç§„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅ\n"
          MESSAGE+="„Éñ„É©„É≥„ÉÅ: ${{ github.ref_name }}\n"
          MESSAGE+="„Ç≥„Éü„ÉÉ„Éà: ${{ github.sha }}\n"
          MESSAGE+="Vercel URL: https://household-remaining.vercel.app"
          
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"$MESSAGE\"}" \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on Failure
        if: failure() && env.SLACK_WEBHOOK_URL != ''
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          MESSAGE="‚ùå „Éó„É≠„ÉÄ„ÇØ„Ç∑„Éß„É≥„Éá„Éó„É≠„Ç§„ÅåÂ§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ\n"
          MESSAGE+="„Éñ„É©„É≥„ÉÅ: ${{ github.ref_name }}\n"
          MESSAGE+="„Ç≥„Éü„ÉÉ„Éà: ${{ github.sha }}\n"
          MESSAGE+="Á¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"$MESSAGE\"}" \
          ${{ secrets.SLACK_WEBHOOK_URL }}